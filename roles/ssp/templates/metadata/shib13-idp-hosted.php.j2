<?php
/**
 * SAML 1.1 IdP configuration for SimpleSAMLphp.
 *
 * See: https://simplesamlphp.org/docs/stable/simplesamlphp-reference-idp-hosted
 *
 * {{ ansible_managed }}
 */

{% for idp in ssp_idp_hosts %}
$metadata['{{ idp.entity_id }}'] = array(
	/*
	 * The hostname of the server (VHOST) that will use this SAML entity.
	 *
	 * Can be '__DEFAULT__', to use this entry by default.
	 */
	'host' => '{{ idp.host }}',
	// X.509 key and certificate. Relative to the cert directory.
	'privatekey' => 'idp-{{ idp.entity_id }}.key',
	'certificate' => 'idp-{{ idp.entity_id }}.crt',
{% if idp.sign_algorithm is defined %}
        // Algorithm to use when signing any message generated by this IdP.             'signature.algorithm' => '{{ idp.sign_algorithm }}',
{% endif %}
{% if idp.redirect_sign is defined %}
        // Whether logout requests and logout responses sent from this IdP
        // should be signed.
        'redirect.sign' => {{ idp.redirect_sign }},
{% endif %}
{% if idp.redirect_validate is defined %}
        // Whether authentication requests, logout requests and logout
        // responses received/sent from this IdP should be validated.
        'redirect.validate' => {{ idp.redirect_validate }},
{% endif %}
	// Authentication source to use. Must be one that is configured in
	// 'config/authsources.php'.
	'auth' => '{{ idp.auth }}',
{% if idp.organization_name is defined %}
        // Localised names of the organisation responsible for this IdP.
        'OrganizationName' => array(
{% for key, value in idp.organization_name.items() %}
            '{{ key }}' => '{{ value }}',
{% endfor %}
        ),
{% endif %}
{% if idp.organization_display_name is defined %}
        // Localised user-friendly names of the organisation responsible for
        // this IdP.
        'OrganizationDisplayName' => array(
{% for key, value in idp.organization_display_name.items() %}
            '{{ key }}' => '{{ value }}',
{% endfor %}
        ),
{% endif %}
{% if idp.organization_url is defined %}
        // Localised URLs of the organisation responsible for this IdP.
        'OrganizationURL' => array(
{% for key, value in idp.organization_url.items() %}
            '{{ key }}' => '{{ value }}',
{% endfor %}
        ),
{% endif %}
{% if idp.privacy_statement_url is defined %}
        // Localised URLs to where users can find a privacy policy for this IdP.
        'privacypolicy' => array(
{% for key, value in idp.privacy_statement_url.items() %}
            '{{ key }}' => '{{ value }}',
{% endfor %}
        ),
{% endif %}
{% if idp.contacts is defined %}
        // List of contacts in addition to the technical contact configured
        // through config/config.php
        'contacts' => array(
{% for contact in idp.contacts %}
            array(
                'contactType'       => '{{ contact.contact_type }}',
{% if contact.company is defined %}
                'company'           => '{{ contact.company }}',
{% endif %}
{% if contact.given_name is defined %}
                'givenName'         => '{{ contact.given_name }}',
{% endif %}
{% if contact.sur_name is defined %}
                'surName'           => '{{ contact.sur_name }}',
{% endif %}
{% if contact.email_address is defined %}
                'emailAddress'      => '{{ contact.email_address }}',
{% endif %}
{% if contact.telephone_number is defined %}
                'telephoneNumber'   => '{{ contact.telephone_number }}',
{% endif %}
            ),
{% endfor %}
        ),
{% endif %}
{% if idp.scopes is defined %}
        /*
         * A list with scopes for this IdP. The scopes will be added to the
         * generated XML metadata. A scope can either be a domain name or a
         * regular expression matching a number of domains.
         */
         'scope' => array(
{% for scope in idp.scopes %}
             '{{ scope }}',
{% endfor %}
         ),
{% endif %}
);

{% endfor %}

