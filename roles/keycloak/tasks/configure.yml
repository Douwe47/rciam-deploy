---

# this is an important block! Do now remove
- name: Wait for keycloak to initialize
  block:
  #wait for port to open
  - name: Waiting for service port to be opened...
    wait_for:
      host: "{{ ansible_facts.default_ipv4.address }}"
      port: 8080
      delay: 10
      timeout: 180
  #wait for service to respond
  - name: Waiting for service to be up and running...
    uri:
      url: "http://{{ ansible_facts.default_ipv4.address }}:8080"
      status_code: "200"
      timeout: 600


- name: Acquire tokens
  include_tasks: blocks/helpers/get_tokens.yml
  tags:
    - "keycloak:config:realm_configuration"
    - "keycloak:config:wayf_plugin"


# configure AUP, realm keys, etc
- name: Configure the keycloak (AUP, realm keys, etc)
  block:

    - name: Ensure that realm already exists
      community.general.keycloak_realm:
        auth_client_id: admin-cli
        auth_keycloak_url: "{{ keycloak_proxy_host }}"
        auth_realm: master
        display_name_html: "<div class=\"kc-logo-text\"><span>{{ item.displayNameHtml }}</span></div>"
        auth_username: "{{ keycloak_admin.user }}"
        auth_password: "{{ keycloak_admin.pass }}"
        id: "{{ item.name }}"
        realm: "{{ item.name }}"
        verify_email: "{{ item.verifyEmail }}"
        enabled: true
        state: present
      with_items: "{{ keycloak_config.realms | default([]) }}"
      run_once: true

    - name: Configure keys
      include_tasks: blocks/configure_keys.yml
      with_subelements:
        - "{{ keycloak_config.realms | default([]) }} "
        - "keys"
        - skip_missing: True
      run_once: true

    - name: Configure AUP (Terms and Conditions)
      uri:
        url: "{{ keycloak_proxy_host }}/admin/realms/{{ item.name }}/authentication/required-actions/terms_and_conditions"
        method: PUT
        body_format: json
        headers:
          Authorization: "Bearer {{ tokens.json.access_token }}"
        body:
          alias: "terms_and_conditions"
          name: "Terms and Conditions"
          providerId: "terms_and_conditions"
          enabled: "{{ item.aup.enabled }}"
          defaultAction: "{{ item.aup.defaultAction }}"
          priority: 20
          config:
            reset_every: "{{ item.aup.reset_every }}"
            reset_every_multiplier: "{{ item.aup.reset_every_multiplier }}"
        status_code: 204
      with_items: "{{ keycloak_config.realms | default([]) }}"
      when: not item.aup is undefined
      run_once: true

    - name: Setup SMTP
      community.general.keycloak_realm:
        auth_client_id: admin-cli
        auth_keycloak_url: "{{ keycloak_proxy_host }}"
        auth_realm: master
        auth_username: "{{ keycloak_admin.user }}"
        auth_password: "{{ keycloak_admin.pass }}"
        id: "{{ item.name }}"
        realm: "{{ item.name }}"
        smtpServer:
          port: "{{ item.smtp.port }}"
          ssl: "{{ item.smtp.enable_ssl }}"
          starttls: "{{ item.smtp.enable_starttls }}"
          host: "{{ item.smtp.host }}"
          fromDisplayName: "{{ item.smtp.from_name }}"
          from: "{{ item.smtp.from_email }}"
          replyToDisplayName: "{{ item.smtp.reply_to_name }}"
          replyTo: "{{ item.smtp.reply_to_email }}"
          envelopeFrom: "{{ item.smtp.envelope_from }}"
          auth: "{{ item.smtp.auth_enabled }}"
          user: "{{ item.smtp.auth_username }}"
          password: "{{ item.smtp.auth_password }}"
        state: present
      with_items: "{{ keycloak_config.realms | default([]) }}"
      when: not item.smtp is undefined
      run_once: true

    - name: Setup federations
      include_tasks: blocks/configure_federations.yml
      with_subelements:
        - "{{ keycloak_config.realms | default([]) }} "
        - "federations"
        - skip_missing: True
      run_once: true

    - name: Setup social IdPs
      include_tasks: blocks/configure_social_idps.yml
      with_subelements:
        - "{{ keycloak_config.realms | default([]) }} "
        - "social_idps"
        - skip_missing: True
      run_once: true

    - name: Setup saml IdPs
      include_tasks: blocks/configure_saml_idps.yml
      with_subelements:
        - "{{ keycloak_config.realms | default([]) }} "
        - "saml_idps"
        - skip_missing: True
      run_once: true

    - name: Setup IdP mappers
      include_tasks: blocks/configure_idp_mappers.yml
      with_subelements:
        - "{{ keycloak_config.realms | default([]) }} "
        - "idp_mappers"
        - skip_missing: True
      run_once: true

    - name: "Check if there is any default IdP (will skip the WAYF and redirect to that one) defined"
      include_tasks: blocks/configure_default_idp.yml
      with_items: "{{ keycloak_config.realms | default([]) }}"
      loop_control:
        loop_var: current_realm

    - name: Setup client scopes
      include_tasks: blocks/configure_client_scopes.yml
      with_subelements:
        - "{{config.realms | default([])}} "
        - "client_scopes"
        - skip_missing: True
      run_once: true

  tags: "keycloak:config:realm_configuration"

### wayf plugin configuration
- name: Configure wayf plugin
  block:
    - name: Select wayf plugin for login UI
      community.general.keycloak_realm:
        auth_client_id: admin-cli
        auth_keycloak_url: "{{ keycloak_proxy_host }}"
        auth_realm: master
        auth_username: "{{ keycloak_admin.user }}"
        auth_password: "{{ keycloak_admin.pass }}"
        id: "{{ item.name }}"
        realm: "{{ item.name }}"
        login_theme: "{{ keycloak_plugins.wayf.theme.name }}"
        state: present
      with_items: "{{ keycloak_plugins.wayf.theme.add_to_realms }}"
      run_once: true
    - name: "Setting additional theme stuff (config, terms of use)"
      include_tasks: blocks/configure_theme.yml
      with_items: "{{ keycloak_plugins.wayf.theme.add_to_realms }}"

  when: wayf_enabled == true
  vars:
    wayf_enabled: "{{ keycloak_plugins.wayf.enabled | default(false) }}"
  tags: "keycloak:config:wayf_plugin"