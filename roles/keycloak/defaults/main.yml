---
##in format X.Y.Z
## make sure the corresponding templates/X.Y.Z folder and vars/keycloak/X.Y.Z.yml exist
keycloak_version: "15.0.2"

# if the keycloak archive is from the "stage" branch, then you might enable the wayf plugin (keycloak-theme-vanilla)
keycloak_archive_url: "https://github.com/keycloak/keycloak/releases/download/{{ keycloak_version }}/keycloak-{{ keycloak_version }}.tar.gz"

## if set to true, any existing installation will moved aside (not deleted) and the new keycloak from the archive will be installed.
## if a different database is defined, the installation will be a clear one. If the same (previous) database is used, it will upgrade to the new version.
keycloak_is_upgrade: false

keycloak_service_user: "keycloak"

# Extra run params used in the keycloak systemd service. Multiple `-D` params can be specified.  E.g. uncomment the following to enable technology preview features
#keycloak_extra_run_params: "-Dkeycloak.profile=preview"

keycloak_base_url_path: "auth" # The base URL path for frontend and backend requests. Note that this cannot be empty.


keycloak_admin:
  user: "<SET AN ADMIN USER>"
  pass: "<SET AN ADMIN PASS>"

keycloak_db:
  name: "<KEYCLOAK DB NAME>"
  user: "<DB USERNAME>"
  pass: "<DB USER PASSWORD>"

keycloak_db_host: "{{ groups['db'][0] }}"
keycloak_proxy_host: "http://localhost:{{ keycloak_bind_port }}/{{ keycloak_base_url_path }}"

keycloak_home: "/srv/keycloak"

keycloak_bind_address: "0.0.0.0"
keycloak_bind_port: "8080"

keycloak_java_opts: "-Xms1024m -Xmx2048m -XX:MaxPermSize=768m"

keycloak_logs_folder: "/var/log/keycloak"

keycloak_logs_max_days: 548  # that's ~18 months

### plugins
### wayf plugin works ONLY with "stage" branch of keycloak (need to have commit fe055820980dbcb79d5aae2b4dce78b840b912b0)
#keycloak_plugins:
#  wayf:
#    enabled: true
#    name: "keycloak-theme-vanilla" #PLEASE, do not change this
#    module:
#      jar_url: "<location of plugin jar>"
#      modulexml_url: "https://raw.githubusercontent.com/eosc-kc/keycloak-theme-vanilla/master/module.xml"
#    theme:
#      name: "rciam"
#      add_to_realms:
#        - "master"
#    theme:
#      name: "rciam"
#      add_to_realms:
#        - name: "demo"
#          terms: "{{ lookup('file', inventory_dir + '/group_vars/keycloak/terms/einfra.html') }}"
#          config:
#            ribbonText:
#              - "Demo"
#            htmlFooterText:
#              - "Copyright Â© 2021-2022"
#            supportUrl:
#              - "eid-support@einfra.grnet.gr"
#            privacyPolicyUrl:
#              - "https://eid-proxy.aai-dev.grnet.gr/static/privacy-policy.pdf"
#  idp_hashedid_mapper:
#    enabled: true
#    name: "keycloak-idp-hashedId-mapper" #PLEASE, do not change this
#    module:
#      jar_url: "<location of plugin jar>"
#      modulexml_url: "https://raw.githubusercontent.com/eosc-kc/keycloak-idp-hashedId-mapper/master/module.xml"
#  orcid_idp:
#    enabled: true
#    name: "orcid-idp"
#    hotdeploy:
#      jar_url: "https://github.com/eosc-kc/keycloak-orcid/releases/download/1.0.0/keycloak-orcid-1.0.0.jar"

### Remaining configuration (enc keys, social IdPs, AUP config, SMTP config, etc)
### you can have more than one realms configured here (if it doesn't exist, it will be created). just copy the format of the master and add it in the list.
### also, you can just comment out any of the {key, aup, smtp} sub trees and let the remaining get configured
#keycloak_config:
#  realms:
#    - name: master
#      defaultIdPAlias: "" #setting this to an IdP's name, will skip the WAYF and redirect to that IdP
#      config:
#        enabled: true  #do not change this
#        displayNameHtml: "<div class=\"kc-logo-text\"><span>Keycloak</span></div>"
#        verifyEmail: true
#        ssoSessionIdleTimeout: 31536000
#        ssoSessionMaxLifespan: 34128000
#        smtpServer:
#          host: ""
#          from: ""
#          port: ""
#          ssl: ""
#          starttls: ""
#          fromDisplayName: ""
#          envelopeFrom: ""
#          replyTo: ""
#          replyToDisplayName: ""
#          auth: "false"
#          user: ""
#          password: ""
#      client_registration_policies:
#        create_update:
#          - name: "Allowed Client Scopes"
#            providerId: "allowed-client-templates"
#            providerType: "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy"
#            subType: "anonymous"
#            config:
#              allow-default-scopes:
#                - "false"
#              allowed-client-scopes:
#                - "openid"
#        delete:
#          - name: "Trusted Hosts"
#            providerId: "trusted-hosts"
#            subType: "anonymous"
#      role_management:
#        roles:
#          - name: "student"
#            description: "this is a blah blah"
#            attributes:
#              key1:
#                - "value1"
#          - name: "teacher"
#            description: "this is a blah blah"
#        default_roles:
#          add:
#            - "student"
#            - "teacher"
#          remove:
#            - "uma_authorization"
#        composite_roles:
#          - name: "student"
#            composites:
#              - "offline_access"
#              - "uma_authorization"
#          - name: "teacher"
#            composites:
#              - "student"
#        client_default_roles:
#          - name: "account"
#            add:
#              - "manage-account-basic-auth"
#              - "manage-account-2fa"
#            remove:
#              - "view-profile"
#      keys:
#        - name: "rsa-sig"
#          providerId: "rsa" #DO NOT CHANGE THIS
#          config:
#            privateKey:
#              - "MIIEvgIBADANBgkqhkiG9....."
#            certificate:
#              - "MIID2TCCAsGgAwIBAgIUX....."
#            algorithm:
#              - "RS256"
#            keyUse:
#              - "sig"
#            priority:
#              - 100
#            enabled:
#              - true
#            active:
#              - true
#        - name: "rsa-enc"
#          providerId: "rsa" #DO NOT CHANGE THIS
#          config:
#            privateKey:
#              - "MIIEvgIBADANBgkqhkiG9....."
#            certificate:
#              - "MIID2TCCAsGgAwIBAgIUX....."
#            algorithm:
#              - "RS256"
#            keyUse:
#              - "enc"
#            priority:
#              - 100
#            enabled:
#              - true
#            active:
#              - true
#        - name: "generate-rsa-enc"
#          providerId: "rsa-generated" #DO NOT CHANGE THIS
#          config:
#            algorithm:
#              - "RS256"
#            keySize:
#              - "2048"
#            keyUse:
#              - "enc"
#            priority:
#              - 100
#            enabled:
#              - true
#            active:
#              - true
#        - name: "generate-rsa-sig"
#          providerId: "rsa-generated" #DO NOT CHANGE THIS
#          config:
#            algorithm:
#              - "RS256"
#            keySize:
#              - "2048"
#            keyUse:
#              - "sig"
#            priority:
#              - 100
#            enabled:
#              - true
#            active:
#              - true
#        - name: "java-keystore-sig"
#          providerId: "java-keystore" #DO NOT CHANGE THIS
#          config:
#            keyUse:
#              - "sig"
#            priority:
#              - 100
#            enabled:
#              - true
#            active:
#              - true
#            algorithm:
#              - "RS256"
#            keystore:
#              - "<KEYSTORE_LOCAL_FILEPATH>"
#            keystorePassword:
#              - "<KEYSTORE_PASSWORD>"
#            keyAlias:
#              - "<KEY_ALIAS>"
#            keyPassword:
#              - "<KEY_PASSWORD>"
#        - name: "generate-hmac"
#          providerId: "hmac-generated" #DO NOT CHANGE THIS
#          config:
#            algorithm:
#              - "HS256"
#            secretSize:
#              - "64"
#            priority:
#              - 100
#            enabled:
#              - true
#            active:
#              - true
#        - name: "generate-aes"
#          providerId: "aes-generated" #DO NOT CHANGE THIS
#          config:
#            secretSize:
#              - "16"
#            priority:
#              - 100
#            enabled:
#              - true
#            active:
#              - true
#        - name: "generate-ecdsa"
#          providerId: "ecdsa-generated" #DO NOT CHANGE THIS
#          config:
#            ecdsaEllipticCurveKey:
#              - "P-256"
#            priority:
#              - 100
#            enabled:
#              - true
#            active:
#              - true
#      aup:
#        enabled: true
#        defaultAction: true
#        reset_every: 165  # it goes (reset_every * reset_every_multiplier) seconds
#        reset_every_multiplier: 3600 # use 3600 for hours, 86400 for days
#      client_scopes:
#        - name: "dummy"
#          description: "this is a dummy one"
#          protocol: "openid-connect"
#          attributes:
#            include.in.token.scope: "true"
#            display.on.consent.screen: "true"
#            gui.order: "4"
#            consent.screen.text: "aaaaa1"
#            hide.from.openID.provider.metadata: "true"   # default value is "false". If not included in the config, it is set = "false", the default value
#          set_as: "default"   # could be one of: {"default", "optional"}. Leave it commented out to skip this setting
#          mappers:
#            - name: "dummymapper"
#              protocol: "openid-connect"
#              protocolMapper: "oidc-usermodel-attribute-mapper"
#              config:
#                access.token.claim: "true"
#                aggregate.attrs: ""
#                claim.name: "claim11"
#                id.token.claim: "true"
#                introspection.response.claim: "false"
#                jsonType.label: "String"
#                multivalued: ""
#                user.attribute: "attrib11"
#                userinfo.token.claim: "true"
#      federations:
#        - providerId: "saml" # DO NOT CHANGE THIS!
#          url: "<THE URL OF THE FEDERATION's XML>"
#          alias: "<SET AN ALIAS>"
#          updateFrequencyInMins: 1440
#          config:
#            nameIDPolicyFormat: "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent"
#            principalType: "SUBJECT"
#            postBindingAuthnRequest: "true"
#            wantAuthnRequestsSigned: "true"
#            wantAssertionsSigned: "true"
#            wantAssertionsEncrypted: "true"
#            multiplePrincipals: "[{\"principalType\":\"SUBJECT\",\"nameIDPolicyFormat\":\"urn:oasis:names:tc:SAML:2.0:nameid-format:persistent\"}]"
#          entityIdWhiteList:
#            - "https://aaa.bbb.com/entity1"
#          entityIdBlackList:
#            - "https://aaa.bbb.com/entity2"
#          registrationAuthorityWhiteList:
#            - "registration-authority-1"
#          registrationAuthorityBlackList:
#            - "registration-authority-2"
#          categoryWhiteList:
#            attribute-name-1:
#              - "attribute-value-1"
#            attribute-name-2:
#              - "attribute-value-2"
#          categoryBlackList:
#            attribute-name-1:
#              - "attribute-value-1"
#            attribute-name-2:
#              - "attribute-value-2"
#          mappers:
#            - name: "test_mapper"
#              identityProviderMapper: hardcoded-attribute-idp-mapper
#              config:
#                syncMode: INHERIT #one of {INHERIT , LEGACY, IMPORT, FORCE}
#                attribute: "attrib1"
#                attribute.value: "value1"
#            - name: "test_mapper_2"
#              identityProviderMapper: hardcoded-attribute-idp-mapper
#              config:
#                syncMode: INHERIT #one of {INHERIT , LEGACY, IMPORT, FORCE}
#                attribute: "attrib22222222222"
#                attribute.value: "value22222222"
#      saml_idps:
#        - metadataUrl: "<THE REMOTE IDP METADATA XML URL>"
#          data:
#            providerId: "saml" #do not change this
#            alias: "<A UNIQUE ALIAS NAME>"
#            enabled: true
#            authenticateByDefault: false
#            firstBrokerLoginFlowAlias: "first broker login"
#            postBrokerLoginFlowAlias: ""
#            storeToken: ""
#            addReadTokenRoleOnCreate: ""
#            trustEmail: ""
#            linkOnly: ""
#            displayName: "<THE DESIRED DISPLAY NAME>"
#            config:
#              useJwksUrl: "true"
#              syncMode: "IMPORT"
#              principalType: "SUBJECT"
#              signatureAlgorithm: "RSA_SHA256"
#              xmlSigKeyInfoKeyNameTransformer: "KEY_ID"
#              allowCreate: "false"
#              guiOrder: 1
#              entityId: "<THE ENTITY ID>"
#              authnContextComparisonType: "exact"
#              hideOnLoginPage: "false"
#              promotedLoginbutton: ""
#              backchannelSupported: ""
#              postBindingResponse: "true"
#              postBindingAuthnRequest: "true"
#              postBindingLogout: "true"
#              wantAuthnRequestsSigned: "true"
#              wantAssertionsSigned: "true"
#              wantAssertionsEncrypted: "true"
#              forceAuthn: ""
#              signSpMetadata: ""
#              loginHint: "false"
#              addExtensionsElementWithKeyInfo: "false"
#              attributeConsumingServiceName: "<ADD A NAME HERE>"
#              multiplePrincipals: "[{\"principalType\":\"ATTRIBUTE\",\"principalAttribute\":\"urn:oasis:names:tc:SAML:attribute:subject-id\"}]"
#              allowedClockSkew: ""
#              attributeConsumingServiceIndex: ""
#      social_idps:
#        - providerId: "google" #do not change this
#          alias: "google"  #do not change this
#          trustEmail: ""  #boolean
#          storeToken: ""   #boolean
#          linkOnly: ""    #boolean
#          firstBrokerLoginFlowAlias: "first broker login"
#          postBrokerLoginFlowAlias: ""
#          enabled: true
#          authenticateByDefault: false
#          addReadTokenRoleOnCreate: ""
#          config:
#            clientId: "<CLIENT ID>"
#            clientSecret: "<CLIENT SECRET>"
#            useJwksUrl: "true"
#            syncMode: "IMPORT"  #could be one of {IMPORT, LEGACY, FORCE}
#            acceptsPromptNoneForwardFromClient: ""
#            disableUserInfo: ""  #boolean
#            hideOnLoginPage: ""  #boolean
#            promotedLoginbutton: ""   #boolean
#            defaultScope: ""
#            hostedDomain: ""
#            userIp: ""  #boolean
#            offlineAccess: ""  #boolean
#            conditionalTrustEmail: "" #boolean
#        - providerId: "github" #do not change this
#          alias: "github"  #do not change this
#          trustEmail: ""  #boolean
#          storeToken: ""   #boolean
#          linkOnly: ""    #boolean
#          firstBrokerLoginFlowAlias: "first broker login"
#          postBrokerLoginFlowAlias: ""
#          enabled: true
#          authenticateByDefault: false
#          addReadTokenRoleOnCreate: ""
#          config:
#            clientId: "<CLIENT ID>"
#            clientSecret: "<CLIENT SECRET>"
#            useJwksUrl: "true"
#            syncMode: "IMPORT"  #could be one of {IMPORT, LEGACY, FORCE}
#            acceptsPromptNoneForwardFromClient: ""
#            disableUserInfo: ""  #boolean
#            hideOnLoginPage: ""  #boolean
#            promotedLoginbutton: ""   #boolean
#            defaultScope: ""
#        - providerId: "linkedin" #do not change this
#          alias: "linkedin"  #do not change this
#          trustEmail: ""  #boolean
#          storeToken: ""   #boolean
#          linkOnly: ""    #boolean
#          firstBrokerLoginFlowAlias: "first broker login"
#          postBrokerLoginFlowAlias: ""
#          enabled: true
#          authenticateByDefault: false
#          addReadTokenRoleOnCreate: ""
#          config:
#            clientId: "<CLIENT ID>"
#            clientSecret: "<CLIENT SECRET>"
#            useJwksUrl: "true"
#            syncMode: "IMPORT"  #could be one of {IMPORT, LEGACY, FORCE}
#            acceptsPromptNoneForwardFromClient: ""
#            disableUserInfo: ""  #boolean
#            hideOnLoginPage: ""  #boolean
#            promotedLoginbutton: ""   #boolean
#            defaultScope: ""
#        - providerId: "facebook" #do not change this
#          alias: "facebook"  #do not change this
#          trustEmail: ""  #boolean
#          storeToken: ""   #boolean
#          linkOnly: ""    #boolean
#          firstBrokerLoginFlowAlias: "first broker login"
#          postBrokerLoginFlowAlias: ""
#          enabled: true
#          authenticateByDefault: false
#          config:
#            clientId: "<CLIENT ID>"
#            clientSecret: "<CLIENT SECRET>"
#            useJwksUrl: "true"
#            syncMode: "IMPORT"  #could be one of {IMPORT, LEGACY, FORCE}
#            addReadTokenRoleOnCreate: ""
#            acceptsPromptNoneForwardFromClient: ""
#            disableUserInfo: ""  #boolean
#            hideOnLoginPage: ""  #boolean
#            promotedLoginbutton: ""   #boolean
#            defaultScope: ""
#            fetchedFields: ""
#        - providerId: "instagram" #do not change this
#          alias: "instagram" #do not change this
#          trustEmail: ""  #boolean
#          storeToken: ""   #boolean
#          linkOnly: ""    #boolean
#          firstBrokerLoginFlowAlias: "first broker login"
#          postBrokerLoginFlowAlias: ""
#          enabled: true
#          authenticateByDefault: false
#          addReadTokenRoleOnCreate: ""
#          config:
#            clientId: "<CLIENT ID>"
#            clientSecret: "<CLIENT SECRET>"
#            useJwksUrl: "true"
#            syncMode: "IMPORT"  #could be one of {IMPORT, LEGACY, FORCE}
#            acceptsPromptNoneForwardFromClient: ""
#            disableUserInfo: ""  #boolean
#            hideOnLoginPage: ""  #boolean
#            promotedLoginbutton: ""   #boolean
#            defaultScope: ""
#        - providerId: "microsoft" #do not change this
#          alias: "microsoft" #do not change this
#          trustEmail: ""  #boolean
#          storeToken: ""   #boolean
#          linkOnly: ""    #boolean
#          firstBrokerLoginFlowAlias: "first broker login"
#          postBrokerLoginFlowAlias: ""
#          enabled: true
#          authenticateByDefault: false
#          addReadTokenRoleOnCreate: ""
#          config:
#            clientId: "<CLIENT ID>"
#            clientSecret: "<CLIENT SECRET>"
#            useJwksUrl: "true"
#            syncMode: "IMPORT"  #could be one of {IMPORT, LEGACY, FORCE}
#            acceptsPromptNoneForwardFromClient: ""
#            disableUserInfo: ""  #boolean
#            hideOnLoginPage: ""  #boolean
#            promotedLoginbutton: ""   #boolean
#            defaultScope: ""
#        - providerId: "bitbucket" #do not change this
#          alias: "bitbucket" #do not change this
#          trustEmail: ""  #boolean
#          storeToken: ""   #boolean
#          linkOnly: ""    #boolean
#          firstBrokerLoginFlowAlias: "first broker login"
#          postBrokerLoginFlowAlias: ""
#          enabled: true
#          authenticateByDefault: false
#          addReadTokenRoleOnCreate: ""
#          config:
#            clientId: "<CLIENT ID>"  # consumer key
#            clientSecret: "<CLIENT SECRET>"  # consumer secret
#            useJwksUrl: "true"
#            syncMode: "IMPORT"  #could be one of {IMPORT, LEGACY, FORCE}
#            hideOnLoginPage: ""  #boolean
#            promotedLoginbutton: ""   #boolean
#            defaultScope: ""
#        - providerId: "twitter" #do not change this
#          alias: "twitter" #do not change this
#          trustEmail: ""  #boolean
#          storeToken: ""   #boolean
#          linkOnly: ""    #boolean
#          firstBrokerLoginFlowAlias: "first broker login"
#          postBrokerLoginFlowAlias: ""
#          enabled: true
#          authenticateByDefault: false
#          addReadTokenRoleOnCreate: ""
#          config:
#            clientId: "<CLIENT ID>"
#            clientSecret: "<CLIENT SECRET>"
#            useJwksUrl: "true"
#            syncMode: "IMPORT"  #could be one of {IMPORT, LEGACY, FORCE}
#            acceptsPromptNoneForwardFromClient: ""
#            disableUserInfo: ""  #boolean
#            hideOnLoginPage: ""  #boolean
#            promotedLoginbutton: ""   #boolean
#            defaultScope: ""
#        - providerId: "gitlab" #do not change this
#          alias: "gitlab" #do not change this
#          trustEmail: ""  #boolean
#          storeToken: ""   #boolean
#          linkOnly: ""    #boolean
#          firstBrokerLoginFlowAlias: "first broker login"
#          postBrokerLoginFlowAlias: ""
#          enabled: true
#          authenticateByDefault: false
#          addReadTokenRoleOnCreate: ""
#          config:
#            clientId: "<CLIENT ID>"  # application id
#            clientSecret: "<CLIENT SECRET>"  # application secret
#            useJwksUrl: "true"
#            syncMode: "IMPORT"  #could be one of {IMPORT, LEGACY, FORCE}
#            hideOnLoginPage: ""  #boolean
#            promotedLoginbutton: ""   #boolean
#            defaultScope: ""
#        - providerId: "paypal" #do not change this
#          alias: "paypal" #do not change this
#          trustEmail: ""  #boolean
#          storeToken: ""   #boolean
#          linkOnly: ""    #boolean
#          firstBrokerLoginFlowAlias: "first broker login"
#          postBrokerLoginFlowAlias: ""
#          enabled: true
#          authenticateByDefault: false
#          addReadTokenRoleOnCreate: ""
#          config:
#            clientId: "<CLIENT ID>"
#            clientSecret: "<CLIENT SECRET>"
#            useJwksUrl: "true"
#            syncMode: "IMPORT"  #could be one of {IMPORT, LEGACY, FORCE}
#            sandbox: ""  #boolean
#            acceptsPromptNoneForwardFromClient: ""
#            disableUserInfo: ""  #boolean
#            hideOnLoginPage: ""  #boolean
#            promotedLoginbutton: ""   #boolean
#            defaultScope: ""
#        - providerId: "stackoverflow" #do not change this
#          alias: "stackoverflow" #do not change this
#          trustEmail: ""  #boolean
#          storeToken: ""   #boolean
#          linkOnly: ""    #boolean
#          firstBrokerLoginFlowAlias: "first broker login"
#          postBrokerLoginFlowAlias: ""
#          enabled: true
#          authenticateByDefault: false
#          addReadTokenRoleOnCreate: ""
#          config:
#            clientId: "<CLIENT ID>"
#            clientSecret: "<CLIENT SECRET>"
#            key: "<USE A KEY>"
#            useJwksUrl: "true"
#            syncMode: "IMPORT"  #could be one of {IMPORT, LEGACY, FORCE}
#            acceptsPromptNoneForwardFromClient: ""
#            disableUserInfo: ""  #boolean
#            hideOnLoginPage: ""  #boolean
#            promotedLoginbutton: ""   #boolean
#            defaultScope: ""
#        - providerId: "openshift-v4" #do not change this
#          alias: "use-an-alias-here-too"
#          trustEmail: ""  #boolean
#          storeToken: ""   #boolean
#          linkOnly: ""    #boolean
#          firstBrokerLoginFlowAlias: "first broker login"
#          postBrokerLoginFlowAlias: ""
#          enabled: true
#          authenticateByDefault: false
#          addReadTokenRoleOnCreate: ""
#          config:
#            clientId: "<CLIENT ID>"
#            clientSecret: "<CLIENT SECRET>"
#            baseUrl: ""
#            useJwksUrl: "true"
#            syncMode: "IMPORT"  #could be one of {IMPORT, LEGACY, FORCE}
#            disableUserInfo: ""  #boolean
#            hideOnLoginPage: ""  #boolean
#            promotedLoginbutton: ""   #boolean
#        - providerId: "openshift-v3" #do not change this
#          alias: "use-an-alias-here-too"
#          trustEmail: ""  #boolean
#          storeToken: ""   #boolean
#          linkOnly: ""    #boolean
#          firstBrokerLoginFlowAlias: "first broker login"
#          postBrokerLoginFlowAlias: ""
#          enabled: true
#          authenticateByDefault: false
#          addReadTokenRoleOnCreate: ""
#          config:
#            clientId: "<CLIENT ID>"
#            clientSecret: "<CLIENT SECRET>"
#            baseUrl: ""
#            useJwksUrl: "true"
#            syncMode: "IMPORT"  #could be one of {IMPORT, LEGACY, FORCE}
#            disableUserInfo: ""  #boolean
#            hideOnLoginPage: ""  #boolean
#            promotedLoginbutton: ""   #boolean
#     #Each entry of idp_mappers list is a IdentityProviderMapperRepresentation, see here: https://www.keycloak.org/docs-api/15.0/rest-api/index.html#_identityprovidermapperrepresentation
#      idp_mappers:
#        - name: <MAPPER_UNIQUE_NAME>
#          identityProviderAlias: <IDP_ALIAS>
#          identityProviderMapper: saml-advanced-role-idp-mapper
#          config:
#            syncMode: INHERIT #one of {INHERIT , LEGACY, IMPORT, FORCE}
#            attributes: "[{\"key\":\"attrKey1\",\"value\":\"attrVal1\"}]"
#            role: <ROLE_NAME>
#            are.attribute.values.regex: true
#        - name: <MAPPER_UNIQUE_NAME>
#          identityProviderAlias: <IDP_ALIAS>
#          identityProviderMapper: saml-username-idp-mapper
#          config:
#            syncMode: INHERIT #one of {INHERIT , LEGACY, IMPORT, FORCE}
#            template: <TEMPLATE>
#            target: "LOCAL" #one of {LOCAL, BROKER_ID, BROKER_USERNAME}
#        - name: <MAPPER_UNIQUE_NAME>
#          identityProviderAlias: <IDP_ALIAS>
#          identityProviderMapper: saml-javascript-idp-mapper
#          config:
#            syncMode: INHERIT #one of {INHERIT , LEGACY, IMPORT, FORCE}
#            single: true
#            Script: "<ADD HERE THE SCRIPT>"
#        - name: <MAPPER_UNIQUE_NAME>
#          identityProviderAlias: <IDP_ALIAS>
#          identityProviderMapper: hardcoded-user-session-attribute-idp-mapper
#          config:
#            syncMode: INHERIT #one of {INHERIT , LEGACY, IMPORT, FORCE}
#            attribute: <ATTRIBUTE NAME>
#            attribute.value: <ATTRIBUTE VALUE>
#        - name: <MAPPER_UNIQUE_NAME>
#          identityProviderAlias: <IDP_ALIAS>
#          identityProviderMapper: user-hashedid-idp-mapper
#          config:
#            syncMode: INHERIT #one of {INHERIT , LEGACY, IMPORT, FORCE}
#            user.attribute: <USER ATTRIBUTE>
#            hash.id.salt: <SALT>
#            hash.id.scope: <SCOPE>
#        - name: <MAPPER_UNIQUE_NAME>
#          identityProviderAlias: <IDP_ALIAS>
#          identityProviderMapper: saml-user-attribute-idp-mapper
#          config:
#            syncMode: INHERIT #one of {INHERIT , LEGACY, IMPORT, FORCE}
#            attribute.name: <ATTRIBUTE NAME>
#            attribute.friendly.name: <FRIENDLY NAME>
#            attribute.name.format: "ATTRIBUTE_FORMAT_BASIC"  # one of: {ATTRIBUTE_FORMAT_BASIC, ATTRIBUTE_FORMAT_URI, ATTRIBUTE_FORMAT_UNSPECIFIED}
#            user.attribute: <USER ATTRIBUTE NAME>
#        - name: <MAPPER_UNIQUE_NAME>
#          identityProviderAlias: <IDP_ALIAS>
#          identityProviderMapper: oidc-hardcoded-role-idp-mapper
#          config:
#            syncMode: INHERIT #one of {INHERIT , LEGACY, IMPORT, FORCE}
#            role: <ROLE NAME>
#        - name: <MAPPER_UNIQUE_NAME>
#          identityProviderAlias: <IDP_ALIAS>
#          identityProviderMapper: hardcoded-attribute-idp-mapper
#          config:
#            syncMode: INHERIT #one of {INHERIT , LEGACY, IMPORT, FORCE}
#            attribute: <ATTRIBUTE NAME>
#            attribute.value: <ATTRIBUTE VALUE>
#        - name: <MAPPER_UNIQUE_NAME>
#          identityProviderAlias: <IDP_ALIAS>
#          identityProviderMapper: saml-role-idp-mapper
#          config:
#            syncMode: INHERIT #one of {INHERIT , LEGACY, IMPORT, FORCE}
#            attribute.name: "attrib1"
#            attribute.friendly.name: "friendlyname1"
#            attribute.value: "value1"
#            role: "role1"
#        - name: <MAPPER_UNIQUE_NAME>
#          identityProviderAlias: <IDP_ALIAS>
#          identityProviderMapper: oidc-user-attribute-idp-mapper
#          config:
#            syncMode: INHERIT #one of {INHERIT , LEGACY, IMPORT, FORCE}
#            claim: "myclaim1"
#            user.attribute: "userattrib1"
#        - name: <MAPPER_UNIQUE_NAME>
#          identityProviderAlias: <IDP_ALIAS>
#          identityProviderMapper: oidc-advanced-role-idp-mapper
#          config:
#            syncMode: INHERIT #one of {INHERIT , LEGACY, IMPORT, FORCE}
#            claims: "[]"
#            are.claim.values.regex: "true"
#            role: "role1"
#        - name: <MAPPER_UNIQUE_NAME>
#          identityProviderAlias: <IDP_ALIAS>
#          identityProviderMapper: javascript-idp-mapper
#          config:
#            syncMode: INHERIT #one of {INHERIT , LEGACY, IMPORT, FORCE}
#            single: true
#            Script: "<ADD HERE THE SCRIPT>"
#        - name: <MAPPER_UNIQUE_NAME>
#          identityProviderAlias: <IDP_ALIAS>
#          identityProviderMapper: oidc-role-idp-mapper
#          config:
#            syncMode: INHERIT #one of {INHERIT , LEGACY, IMPORT, FORCE}
#            claim: "claimname1"
#            claim.value: "claimvalue1"
#            role: "role1"
#        - name: <MAPPER_UNIQUE_NAME>
#          identityProviderAlias: <IDP_ALIAS>
#          identityProviderMapper: oidc-username-idp-mapper
#          config:
#            syncMode: INHERIT #one of {INHERIT , LEGACY, IMPORT, FORCE}
#            template: <TEMPLATE>
#            target: "LOCAL" #one of {LOCAL, BROKER_ID, BROKER_USERNAME}
